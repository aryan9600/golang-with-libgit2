TAG ?= latest

PLATFORMS ?= linux/amd64,linux/arm/v7,linux/arm64
BUILD_ARGS ?=

REPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)
TARGET_DIR ?= $(REPOSITORY_ROOT)/build/libgit2
BUILD_ROOT_DIR ?= $(REPOSITORY_ROOT)/build/libgit2-src

LIBGIT2_PATH := $(TARGET_DIR)
LIBGIT2_LIB_PATH := $(LIBGIT2_PATH)/lib
LIBGIT2_LIB64_PATH := $(LIBGIT2_PATH)/lib64
LIBGIT2 := $(LIBGIT2_LIB_PATH)/libgit2.a
MUSL-CC =

IMG ?= ghcr.io/fluxcd/golang-with-libgit2-only
DOCKERFILE ?= Dockerfile.libgit2-only
TEST_DOCKERFILE ?= Dockerfile.test-libgit2-only

export CGO_ENABLED=1
export LIBRARY_PATH=$(LIBGIT2_LIB_PATH)
export PKG_CONFIG_PATH=$(LIBGIT2_LIB_PATH)/pkgconfig
export CGO_LDFLAGS=$(shell PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) pkg-config --libs --static --cflags libgit2)
export CGO_CFLAGS=-I$(LIBGIT2_PATH)/include
export ALLOW_THREADLESS_LIBGIT2=true

GO_STATIC_FLAGS=-tags 'netgo,osusergo,static_build'

.PHONY: build
build:
	docker buildx build \
		--platform=$(PLATFORMS) \
		--tag $(IMG):$(TAG) \
		--file $(DOCKERFILE) \
		$(BUILD_ARGS) .

.PHONY: test
test:
	docker buildx build \
		--platform=$(PLATFORMS) \
		--tag $(IMG):$(TAG)-test \
		--file $(TEST_DOCKERFILE) \
		$(BUILD_ARGS) .

.PHONY: builder
builder:
	# create local builder
	docker buildx create --name local-builder \
		--platform $(PLATFORMS) \
		--driver-opt network=host \
		--driver-opt env.BUILDKIT_STEP_LOG_MAX_SIZE=1073741274 \
		--driver-opt env.BUILDKIT_STEP_LOG_MAX_SPEED=5000000000000 \
		--buildkitd-flags '--allow-insecure-entitlement security.insecure' \
		--use
	# install qemu emulators
	docker run -it --rm --privileged tonistiigi/binfmt --install all

$(LIBGIT2):
	TARGET_DIR=$(TARGET_DIR) BUILD_ROOT_DIR=$(BUILD_ROOT_DIR) \
		./hack/static.sh build_libgit2_only

# dev-test is a smoke test for development environment
# consuming the libraries generated by this project.
dev-test: $(LIBGIT2)
	cd tests/smoketest; go vet $(GO_STATIC_FLAGS) ./...
	cd tests/smoketest; go run $(GO_STATIC_FLAGS) main.go
