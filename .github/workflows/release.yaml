---
name: 'Release static libraries'
on:
  push:
    tags:
      - '**'

  workflow_dispatch:
    inputs:
      tag:
        description: 'release prefix'
        default: 'rc'
        required: true


permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing

jobs:

  linux-amd64-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build static libraries - libgit2 compiled with libssh2 and openssl
        run: |
          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-linux \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/amd \
          ./hack/static.sh all
          
          mkdir -p ./libgit2-linux-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/include ./libgit2-linux-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/share ./libgit2-linux-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/lib ./libgit2-linux-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/lib64 ./libgit2-linux-libgit2-all/

          tar -zcvf linux-x86_64-libgit2-all-libs.tar.gz libgit2-linux-libgit2-all
          rm -rf ${GITHUB_WORKSPACE}/build ${GITHUB_WORKSPACE}/libgit2

      - name: Build static libraries - libgit2 only
        run: |
          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-linux \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/amd \
          ./hack/static.sh build_libgit2_only

          mkdir -p ./libgit2-linux-libgit2-only/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/include ./libgit2-linux-libgit2-only/
          mv ${GITHUB_WORKSPACE}/build/libgit2-linux/lib ./libgit2-linux-libgit2-only/

          tar -zcvf linux-x86_64-libgit2-only-lib.tar.gz libgit2-linux-libgit2-only
          rm -rf ${GITHUB_WORKSPACE}/build ${GITHUB_WORKSPACE}/libgit2
      - uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: '*.tar.gz'
          if-no-files-found: error

  darwin-release:
    # This job builds and releases "universal libraries" that are
    # supported by both darwin-amd64 and darwin-arm64.
    #
    # First builds in amd64, then cross-compile in arm64. Later combining
    # both outcomes onto a single binary for each static library.
    #
    # `macos-11` has been picked as support for arm64 was only added on Xcode 12.
    # Although some minor versions of Catalina 10.15 can support it, at the time 
    # of testing, GitHub's macos-10.15 did not seem to. 
    # Cross-compiling to arm64 on that runner consistently failed.
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build universal static libraries for Darwin - libgit2 compiled with libssh2 and openssl
        run: |
          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64 \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/amd \
          ./hack/static.sh all
          
          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64 \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/arm \
          TARGET_ARCH=arm64 \
          CMAKE_APPLE_SILICON_PROCESSOR=arm64 \
          ./hack/static.sh all

          mkdir -p ./libgit2-darwin-libgit2-all/lib
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/include ./libgit2-darwin-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/share ./libgit2-darwin-libgit2-all/
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/cmake ./libgit2-darwin-libgit2-all/lib/
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/engines-3 ./libgit2-darwin-libgit2-all/lib/
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/ossl-modules ./libgit2-darwin-libgit2-all/lib/
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/pkgconfig ./libgit2-darwin-libgit2-all/lib/

          libtool -static -o ./libgit2-darwin-libgit2-all/lib/libcrypto.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libcrypto.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libcrypto.a 

          libtool -static -o ./libgit2-darwin-libgit2-all/lib/libgit2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libgit2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libgit2.a 

          libtool -static -o ./libgit2-darwin-libgit2-all/lib/libssh2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libssh2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libssh2.a 

          libtool -static -o ./libgit2-darwin-libgit2-all/lib/libssl.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libssl.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libssl.a  

          libtool -static -o ./libgit2-darwin-libgit2-all/lib/libz.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libz.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libz.a 

          tar -zcvf darwin-libgit2-all-libs.tar.gz libgit2-darwin-libgit2-all
          rm -rf ${GITHUB_WORKSPACE}/build ${GITHUB_WORKSPACE}/libgit2
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.15

      - name: Build universal static libraries for Darwin - libgit2 only
        run: |
          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64 \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/amd \
          ./hack/static.sh build_libgit2_only

          TARGET_DIR=${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64 \
          BUILD_ROOT_DIR=${GITHUB_WORKSPACE}/libgit2/build/arm \
          TARGET_ARCH=arm64 \
          CMAKE_APPLE_SILICON_PROCESSOR=arm64 \
          ./hack/static.sh build_libgit2_only

          mkdir -p ./libgit2-darwin-libgit2-only/lib
          mv ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/include ./libgit2-darwin-libgit2-only/

          libtool -static -o ./libgit2-darwin-libgit2-only/lib/libgit2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-amd64/lib/libgit2.a \
            ${GITHUB_WORKSPACE}/build/libgit2-darwin-arm64/lib/libgit2.a

          tar -zcvf darwin-libs-libgit2-only.tar.gz libgit2-darwin-libgit2-only
          rm -rf ${GITHUB_WORKSPACE}/build ${GITHUB_WORKSPACE}/libgit2
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.15
      - uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: '*.tar.gz'
          if-no-files-found: error

  goreleaser:
    runs-on: ubuntu-latest
    needs: [linux-amd64-release, darwin-release]
    if:  ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Setup Cosign
        uses: sigstore/cosign-installer@main
      - name: Setup Syft
        uses: anchore/sbom-action/download-syft@v0
      - name: Download Files
        uses: actions/download-artifact@v3
        with:
          name: release-artifact
      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
